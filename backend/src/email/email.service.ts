import { Injectable } from '@nestjs/common';
import { MailerService } from '@nestjs-modules/mailer';
import { SendEmailDto } from 'src/dto/emails/SendEmail.dto';
import { CandidaturaService } from 'src/service/candidatura.service';
import Candidatura from 'src/model/candidatura.entity';

@Injectable()
export class EmailService {
    constructor(
        private readonly mailerService: MailerService,
        private readonly candidaturaService: CandidaturaService,
    ) { 
    }

    async sendApprovedEmail(sendEmail: SendEmailDto): Promise<void> {
       const candidatos: Candidatura[] = await this.candidaturaService.findAllCandidaturas();

       candidatos.forEach(candidato => {
            if (candidato.email === sendEmail.email) {
                this.mailerService.sendMail({
                    to: candidato.email,
                    from: candidato.email,
                    subject: 'Candidato aprovado, parab√©ns!',
                    text: `Ol√°, ${candidato.nomeCompleto}! Como est√°? Esperamos que bem, pois agora ficar√° ainda melhor.\n\nN√≥s da Engeplus viemos por meio deste email comemorar sua aprova√ß√£o em nosso processo seletivo. Est√° empolgado(a)? N√≥s tamb√©m, te esperamos aqui na empresa para finalizarmos seu processo.\n\nCaso queira entrar em contato conosco para tirar alguma d√∫vida acerca da sua aprova√ß√£o, como: documentos e/ou quaisquer outros meios de identifia√ß√£o, estamos √† disposi√ß√£o para atend√™-lo em:\n- {n√∫mero de telefone da empresa}\n- {chat do site da empresa caso haja algum}\n\nE tamb√©m por este email, basta respond√™-lo.\n\nDe antem√£o, lhe informamos que se faz obrigat√≥rio apresentar os seguintes intens:\n- {documentos}\n\n-{O que precisar a mais}`,
                    html: `<p>Ol√°, ${candidato.nomeCompleto}! Como est√°? Esperamos que bem, pois agora ficar√° ainda melhor.</p><p>N√≥s da Engeplus viemos por meio deste email comemorar sua aprova√ß√£o em nosso processo seletivo üôÇ. Est√° empolgado(a)? N√≥s tamb√©m, te esperamos aqui na empresa para finalizarmos seu processo.</p><p>Caso queira entrar em contato conosco para tirar alguma d√∫vida acerca da sua aprova√ß√£o, como: documentos e/ou quaisquer outros meios de identifica√ß√£o, estamos √† disposi√ß√£o para atend√™-lo em:</p><ul><li>{n√∫mero de telefone da empresa}</li><li>{chat do site da empresa caso haja algum}</li></ul><p>E tamb√©m por este email, basta respond√™-lo.</p><p>De antem√£o, lhe informamos que se faz obrigat√≥rio apresentar os seguintes itens:</p><ul><li>{documentos}</li><li>{O que precisar a mais}</li></ul>`,
                });
            };
        });
    };

    async sendDisapprovedEmail(sendEmail: SendEmailDto): Promise<void> {
        const candidatos: Candidatura[] = await this.candidaturaService.findAllCandidaturas();

        candidatos.forEach(candidato => {
            if (candidato.email === sendEmail.email) {
                this.mailerService.sendMail({
                    to: candidato.email,
                    from: candidato.email,
                    subject: 'Novo talento?',
                    text: `Ol√°, ${candidato.nomeCompleto}! Tudo bem?\n\nSabemos que voc√™ se esfor√ßou bastante no seu processo seletivo aqui na Engeplus. Reconhecemos isso e, por meio deste,\n viemos informar que colocaremos voc√™ em nosso banco de talentos para, assim que abrir uma nova vaga, voc√™ seja nossa prioridade!.\n Infelizmente precisamos nos despedir por aqui. ü´°`,
                    html: `<p>Ol√°, ${candidato.nomeCompleto}! Tudo bem?</p><p>Sabemos que voc√™ se esfor√ßou bastante no seu processo seletivo aqui na Engeplus. Reconhecemos isso e, por meio deste, viemos informar que colocaremos voc√™ em nosso banco de talentos para, assim que abrir uma nova vaga, voc√™ seja nossa prioridade!.</p><p>Infelizmente precisamos nos despedir por aqui. ü´°</p>`,
                })
            };
        });
    };
}
